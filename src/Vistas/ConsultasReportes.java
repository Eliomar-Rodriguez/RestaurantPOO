/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import ConsultasyReportes.ConsultayReporte;
import Empleados.Cliente;
import ServicioRestaurante.Bebida;
import ServicioRestaurante.Factura;
import ServicioRestaurante.Orden;
import ServicioRestaurante.Plato;
import ServicioRestaurante.Restaurant;
import static ServicioRestaurante.Restaurant.facturas;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

/**
 *
 * @author Extreme pc
 */
public class ConsultasReportes extends javax.swing.JFrame {

    /**
     * Creates new form ConsultasReportes
     */
    
    public static ConsultayReporte cr = new ConsultayReporte();
    protected ArrayList<Cliente> listaClientes;
    

    public ConsultasReportes() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboConsulta = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaConsulta = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Consultas y Reportes");

        comboConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1. El empleado del mes, mesero y cocinero.", "2. Los dos platos más consumidos por los clientes.", "3. En qué hora del día el restaurante está más lleno.", "4. ¿Cuál es el cliente más frecuente?", "5. Total, por cada plato servido en un mes en específico.", "6. Total, por tipo de bebidas servidas en un día en específico.", "7. Total, vendido por mes.", "8. Total vendido por año.", "9. Total, de clientes atendidos por mes.", "10. Total de clientes atendidos por año", " " }));
        comboConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboConsultaActionPerformed(evt);
            }
        });

        jButton1.setText("Consultar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        areaConsulta.setEditable(false);
        jScrollPane1.setViewportView(areaConsulta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(309, 309, 309)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(318, 318, 318)
                                .addComponent(jButton1)))
                        .addGap(79, 79, 79))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(comboConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(246, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addComponent(comboConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(68, 68, 68))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboConsultaActionPerformed
        
        
        
    }//GEN-LAST:event_comboConsultaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        switch (comboConsulta.getSelectedIndex()) {
            case 0:
                cr.cocineroDelmes();
                cr.meseroDelmes();
               
                break;
            case 1:
                int contador =0;
                for(int i= 0; i < facturas.size(); i++){
                    if(facturas.get(i).getListaDetalle(i).getProducto().getNombre().equals(i)){
                        contador++;
                    }    
                }
                System.out.println(contador);
                 
                break;
            case 2:
                //hora pico
                String hora;
                String horaPico = "";
                
                int veces=0,mayor=0;
        
                for (int i = 0; i < facturas.size(); i++) {
                    hora = facturas.get(i).getHora();
            
                    for (int j = 0; j < facturas.size(); j++) {
                        if (facturas.get(i).getHora().equals(hora)){
                            veces++;
                        } 
                    }
                    if (veces>mayor){
                        horaPico = facturas.get(i).getHora();
                    }
                    mayor = veces;
                    veces=0;
                }
                
                
                areaConsulta.setText(horaPico);
                break;
            case 3:
                //cliente frecuente
                
                String cadena6 = "";
                int vecesActual=0,vecesMayor=0, mayor1=0;
        
                for (int i = 0; i < listaClientes.size(); i++) {
            
                    for (int j = 0; j < facturas.size(); j++) {
                        if (listaClientes.get(i).getCedula().equals(facturas.get(j).getCliente().getCedula())){ // si el cliente que esta en la lista
                            vecesActual++;
                        }                                
                    }
                    if (vecesActual>vecesMayor){
                        mayor=i;
                    }
                    vecesMayor=vecesActual; 
                    vecesActual=0;
                }
     
                cadena6 = String.valueOf(listaClientes.get(mayor1));
 
                cadena6= Integer.toString(mayor1);
                areaConsulta.setText(cadena6);

                
                break;
            case 4:
                //total de platos por mes
                String cadena5 = "";
                Plato plato = new Plato();
                int mes2 = 0;
                int total5 = 0;
                for (int i = 0; i < facturas.size(); i++) {
            
                    String formato="MM";
                    SimpleDateFormat dateFormat = new SimpleDateFormat(formato);

                    if (Integer.parseInt(dateFormat.format(facturas.get(i).getFecha()))==mes2){ // obtengo el mes exacto de la fecha que tiene la factura y la comparo con el mes que recibo de parametro
                        total5 += plato.getIdProducto(); 
                    }
                }
                
                cadena5 = String.valueOf(total5);
 
                cadena5= Integer.toString(total5);
                areaConsulta.setText(cadena5);
                break;
            case 5:
                //total de bebidas por dia
                String cadena4 = "";
                Bebida bebida = new Bebida();
                int dia = 0;
                int total4=0;
            
                for (int i = 0; i < facturas.size(); i++) {
                    String formato="d";
                    SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
            
                    if (Integer.parseInt(dateFormat.format(facturas.get(i).getFecha()))==dia){ // obtengo el dia exacto de la fecha que tiene la factura y la comparo con el dia que recibo de parametro
                        total4 += bebida.getIdProducto(); 
                    }
                }
                cadena4 = String.valueOf(total4);
 
                cadena4= Integer.toString(total4);
                areaConsulta.setText(cadena4);
        
            case 6:
                // total vendido por mes
                String cadena3 = "";
                int mes1 = 0;
                int total3 = 0;
                for (int i = 0; i < facturas.size(); i++) {
            
                    String formato="MM";
                    SimpleDateFormat dateFormat = new SimpleDateFormat(formato);

                    if (Integer.parseInt(dateFormat.format(facturas.get(i).getFecha()))==mes1){ // obtengo el mes exacto de la fecha que tiene la factura y la comparo con el mes que recibo de parametro
                        total3 += facturas.get(i).getPrecioTotal(); // el precio total contiene el precio de las comidas mas lo impuestos, ademas del coste del servicio
                    }
                }
                cadena3 = String.valueOf(total3);
 
                cadena3= Integer.toString(total3);
                areaConsulta.setText(cadena3);
        
                break;
            case 7:
                //total vendido por ano
                String cadena2 = "";
                int ano = 0;
                int total2 = 0;
                for (int i = 0; i < facturas.size(); i++) {
            
                    String formato="yyyy";
                    SimpleDateFormat dateFormat = new SimpleDateFormat(formato);

                    if (Integer.parseInt(dateFormat.format(facturas.get(i).getFecha()))==ano){ // obtengo el año exacto de la fecha que tiene la factura y la comparo con el mes que recibo de parametro
                        total2 += facturas.get(i).getPrecioTotal(); // el precio total contiene el precio de las comidas mas lo impuestos, ademas del coste del servicio
                    }
                }
                cadena2 = String.valueOf(total2);
 
                cadena2= Integer.toString(total2);
                areaConsulta.setText(cadena2);
        
                
                break;
            case 8 :
                // total de clientes por mes
                String cadena = "";
                int mes = 0;
                int total = 0;
                for (int i = 0; i < facturas.size(); i++) {
            
                    String formato="MM";
                    SimpleDateFormat dateFormat = new SimpleDateFormat(formato);

                    if (Integer.parseInt(dateFormat.format(facturas.get(i).getFecha()))==mes){ // obtengo el mes exacto de la fecha que tiene la factura y la comparo con el mes que recibo de parametro
                        total += facturas.get(i).getCliente().getVisitasRealizadas(); // esto me va a dar la cantidad de visitas de clientes en el mes
                    }
                }
                cadena = String.valueOf(total);
 
                cadena= Integer.toString(total);
                areaConsulta.setText(cadena);
                break;
                
            case 9 :
                // total de clientes por ano
                String cadena1 = "";
                int total1 = 0;
                int ano1 = 0;
                for (int i = 0; i < facturas.size(); i++) {
            
                    String formato="yyyy";
                    SimpleDateFormat dateFormat = new SimpleDateFormat(formato);
            
                    if (Integer.parseInt(dateFormat.format(facturas.get(i).getFecha()))==ano1){ // obtengo el año exacto de la fecha que tiene la factura y la comparo con el mes que recibo de parametro
                    total1 += facturas.get(i).getCliente().getVisitasRealizadas(); // esto me va a dar la cantidad de visitas de clientes en el año
                    }
                }
                cadena1 = String.valueOf(total1);
 
                cadena1= Integer.toString(total1);
                areaConsulta.setText(cadena1);
                break;
            default:
                break;
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultasReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultasReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultasReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultasReportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultasReportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane areaConsulta;
    private javax.swing.JComboBox<String> comboConsulta;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
